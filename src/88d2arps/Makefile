#
#     ##################################################################
#     ##################################################################
#     ######                                                      ######
#     ######      Advanced Regional Prediction System (ARPS)      ######
#     ######                   Version 5.0                        ######
#     ######                                                      ######
#     ######                     Developed by                     ######
#     ######     Center for Analysis and Prediction of Storms     ######
#     ######                University of Oklahoma                ######
#     ######                                                      ######
#     ##################################################################
#     ##################################################################
#
#=======================================================================
#
#  PURPOSE: This makefile generates the 88d2arps and nids2arps
#
#  AUTHOR:  Keith Brewster
#           12/10/1997
#
#  Modification history:
#           November 2004 (Keith Brewster)
#           Added radaremul and radbin2cdf
#
#           15 February 2005 (Keith Brewster)
#           Added atten program
#
#wdt-caps sra
#           8 October 2001 (Eric Kemp)
#           Added adjustreflib.f90. (WDT version)
#
#           17 August 2001 (Eric Kemp)
#           Reorganized nids2arps code.
#
#           07/23/2001 (Y. Wang)
#           Convert nids2arps to Fortran 90 and using NWS public code
#
#           03/09/1998 (K. Brewster)
#           Added nids2arps
#
#  OTHER INFORMATION:
#       See the makearps command.
#
#=======================================================================

#-----------------------------------------------------------------------
#
# Default shell
#
#-----------------------------------------------------------------------

# SHELL=/bin/csh

#-----------------------------------------------------------------------
#
# Default names of the loader and tar, can be replaced on the command
# line for other system
#
#-----------------------------------------------------------------------

FTN = pgf90
LDR = pgf90
CC  = cc
CCMP  = $(CC)
FTNMP = $(FTN)

ARPS_LD = $(LDR)

TAR = tar
AWK = awk
RM  = rm
LN  = ln

TOPDIR  =
BINDIR  = $(TOPDIR)/bin
INCLDIR = $(TOPDIR)/include
LIBDIR  = $(TOPDIR)/lib
MODDIR  = $(TOPDIR)/modules
A2IODIR = $(TOPDIR)/src/88d2arps/a2io
SOIODIR = $(TOPDIR)/src/88d2arps/soloio

NETOBJ_ON  = wttiltcdf.o
NETOBJ_OFF = dummycdf.o

#-----------------------------------------------------------------------
#
# Compiler Flag of Options. The default is for AIX Fortran xlf.
#
#-----------------------------------------------------------------------

FFLAGS =
CFLAGS =
LDFLAGS =

FIXFLAGS  =
FREEFLAGS =

LIBS =

#-----------------------------------------------------------------------
#
# Dependencies
#
#.F.o:
#	-@$(RM) -f $*.f90
#	$(CPP) $(CPPFLAGS) $*.F > $*.f90
#	$(FTNMP) $(FFLAGS) $(FREEFLAGS) -c $*.f90
#-----------------------------------------------------------------------

.SUFFIXES: $(SUFFIXES) .f90

.f.o:
	$(FTN) $(FFLAGS) $(FIXFLAGS) -c $<
.f90.o:
	$(FTN) $(FFLAGS) $(FREEFLAGS) -c $<
.F.o:
	$(CPP) $(CPPFLAGS) $< $(addsuffix .f90, $(basename $<));
	$(FTN) $(FFLAGS) $(FREEFLAGS) -c $(addsuffix .f90, $(basename $<))
.c.o:
	$(CC)  $(CFLAGS) -c $<
.mod.o:        # .mod --> .o dependency dropped


#-----------------------------------------------------------------------
#
# Executable to be generated by this make file:
#
# 88D2AEXE = 88d2arps  WSR-88D radar data to ARPS remapper
#
#-----------------------------------------------------------------------

88D2AEXE      = 88d2arps
88D2ASEXE     = solo2arps
88D2AMPEXE    = 88d2arps_mpi
88D2AEXE_FAKE = 88d2arps_fake
NCRAD2AEXE    = ncrad2arps
NCRAD2AMPEXE  = ncrad2arps_mpi
RADEMULEXE    = radaremul
RADB2CDFEXE   = radbin2cdf
RADSECTEXE    = radsector
ATTENEXE      = atten
NIDS2AEXE     = nids2arps
NIDS2AMPEXE   = nids2arps_mpi
CASA2AEXE     = casa2arps

PLTRADCOLEXE    = pltradcol
PLTPPIEXE       = ppiplt
ARPS2RADEXE     = arps2rad
RADARPLTNCAREXE = radarpltncar
RADARPLTPOSTEXE = radarpltpost

#-----------------------------------------------------------------------
#
# Object library to be generated for ARPS solver:
#
# LIBARPS = libarps     ARPS shared library
# LIBADAS = libadas     ADAS shared library
# LIBA2IO = liba2io     A2IO shared library
#
#-----------------------------------------------------------------------

LIBARPS = libarps
LIBADAS = libadas
LIBA2IO = liba2io
LIBSRIO = libsoloread
LIBSDIO = libsolodump
LIBZXPOST = libzxpost
LIBZXNCAR = libzxncar

#-----------------------------------------------------------------------
#
# List of object codes
#
#-----------------------------------------------------------------------

88D2AMAINOBJ = f88d2arps.o

88D2AOBJS1 = rdtilt88d.o

88D2AOBJSC = unfold.o unfldlib.o apdetect.o \
             remaptilt.o remaplib.o wrttilts.o

88D2AOBJS2 = $(88D2AOBJSC)

88D2AOBJS = $(88D2AMAINOBJ) $(88D2AOBJS1) $(88D2AOBJS2)

88D2ASOBJS2 = $(88D2AOBJSC)

88D2ASOBJS = $(88D2AMAINOBJ) $(88D2AOBJS1) $(88D2ASOBJS2)

88D2A_FKOBJ = fakeio.o

NIDS2AMAINOBJ = nids2arps.o

NCRAD2AMAINOBJ = ncrad2arps.o rdtiltcdf.o

DECODEOBJS = nidsdecoders.o rasterlib.o

ADJREFOBJS = adjustreflib.o

NIDS2AOBJS = $(NIDS2AMAINOBJ) $(DECODEOBJS) $(ADJREFOBJS) $(88D2AOBJS2)
NCRAD2AOBJS = $(NCRAD2AMAINOBJ) $(88D2AOBJS2)

CASA2AOBJS = casa2arpsppi.o rdtiltcdf.o remaptilt.o wrttilts.o remaplib.o

PLTRADMAINOBJ = pltradcol.o

PLTRADCOLOBJS = $(PLTRADMAINOBJ)

PLTPPIOBJS    = ppiplt.o

PLTRADARSCANOBJS = pltradarscan.o rdtiltcdf.o

ARPS2RADMAINOBJ = arps2rad.o
ARPS2RADOBJS1 = remaplib.o
ARPS2RADOBJS = $(ARPS2RADMAINOBJ) $(ARPS2RADOBJS1)

RADEMULMAINOBJ = radaremul.o
RADEMULOBJS1 = remaplib.o dualpara.o dualtmat.o duallib.o $(NETOBJ)
RADEMULOBJS = $(RADEMULMAINOBJ) $(RADEMULOBJS1)

RADB2CDFMAINOBJ = radbin2cdf.o
RADB2CDFOBJS1 = $(NETOBJ)
RADB2CDFOBJS = $(RADB2CDFMAINOBJ) $(RADB2CDFOBJS1)

RADSECTMAINOBJ = radsector.o
RADSECTOBJS1 = rdtiltcdf.o wttiltcdf.o
RADSECTOBJS = $(RADSECTMAINOBJ) $(RADSECTOBJS1)

ATTENMAINOBJ = atten.o
ATTENOBJS1 = remaptilt.o
ATTENOBJS = $(ATTENMAINOBJ) $(ATTENOBJS1)
ZXPLOTOBJ_ON  =
ZXPLOTOBJ_POST    = $(LIBDIR)/$(LIBZXPOST).a
ZXPLOTOBJ_NCAR    = $(LIBDIR)/$(LIBZXNCAR).a

ZXPLOTOBJ = $(ZXPLOTOBJ_POST)

#-----------------------------------------------------------------------
#
# Set Default
#
#-----------------------------------------------------------------------

default: $(88D2AEXE)

#-----------------------------------------------------------------------
#
# Compile and link archive-II radar remapping executable, 88d2arps
#
#-----------------------------------------------------------------------

$(88D2AEXE): $(BINDIR)/$(88D2AEXE)
	ls -l $(BINDIR)/$(88D2AEXE)
$(88D2ASEXE): $(BINDIR)/$(88D2ASEXE)
	ls -l $(BINDIR)/$(88D2ASEXE)
$(88D2AMPEXE): $(BINDIR)/$(88D2AMPEXE)
	ls -l $(BINDIR)/$(88D2AMPEXE)
$(88D2AEXE_FAKE): $(BINDIR)/$(88D2AEXE_FAKE)
	ls -l  $(BINDIR)/$(88D2AEXE_FAKE)
$(NIDS2AEXE): $(BINDIR)/$(NIDS2AEXE)
	ls -l  $(BINDIR)/$(NIDS2AEXE)
$(NIDS2AMPEXE): $(BINDIR)/$(NIDS2AMPEXE)
	ls -l  $(BINDIR)/$(NIDS2AMPEXE)
$(CASA2AEXE): $(BINDIR)/$(CASA2AEXE)
	ls -l  $(BINDIR)/$(CASA2AEXE)
$(NCRAD2AEXE): $(BINDIR)/$(NCRAD2AEXE)
	ls -l  $(BINDIR)/$(NCRAD2AEXE)
$(NCRAD2AMPEXE): $(BINDIR)/$(NCRAD2AMPEXE)
	ls -l  $(BINDIR)/$(NCRAD2AMPEXE)
$(ARPS2RADEXE): $(BINDIR)/$(ARPS2RADEXE)
	ls -l  $(BINDIR)/$(ARPS2RADEXE)
$(PLTRADCOLEXE): $(BINDIR)/$(PLTRADCOLEXE)
	ls -l  $(BINDIR)/$(PLTRADCOLEXE)
$(PLTPPIEXE): $(BINDIR)/$(PLTPPIEXE)
	ls -l  $(BINDIR)/$(PLTPPIEXE)
$(RADEMULEXE): $(BINDIR)/$(RADEMULEXE)
	ls -l  $(BINDIR)/$(RADEMULEXE)
$(RADB2CDFEXE): $(BINDIR)/$(RADB2CDFEXE)
	ls -l  $(BINDIR)/$(RADB2CDFEXE)
$(RADSECTEXE): $(BINDIR)/$(RADSECTEXE)
	ls -l  $(BINDIR)/$(RADSECTEXE)
$(ATTENEXE): $(BINDIR)/$(ATTENEXE)
	ls -l  $(BINDIR)/$(ATTENEXE)
$(RADARPLTNCAREXE): $(BINDIR)/$(RADARPLTNCAREXE)
	ls -l  $(BINDIR)/$(RADARPLTNCAREXE)
$(RADARPLTPOSTEXE): $(BINDIR)/$(RADARPLTPOSTEXE)
	ls -l  $(BINDIR)/$(RADARPLTPOSTEXE)

$(BINDIR)/$(88D2AEXE): $(88D2AOBJS) $(LIBDIR)/$(LIBARPS).a              \
                $(LIBDIR)/$(LIBADAS).a $(LIBA2IO) $(LIBSDIO)
	$(ARPS_LD) $(LDFLAGS) -o $@ $(88D2AOBJS) $(LIBDIR)/$(LIBARPS).a \
                $(LIBDIR)/$(LIBADAS).a $(LIBDIR)/$(LIBA2IO).a   \
                $(LIBDIR)/$(LIBSDIO).a $(LIBS)

$(BINDIR)/$(88D2ASEXE): $(88D2ASOBJS) $(LIBDIR)/$(LIBARPS).a              \
                $(LIBDIR)/$(LIBADAS).a $(LIBSRIO)
	$(ARPS_LD) $(LDFLAGS) -o $@ $(88D2ASOBJS) $(LIBDIR)/$(LIBARPS).a \
                $(LIBDIR)/$(LIBADAS).a $(LIBDIR)/$(LIBSRIO).a      \
                $(LIBS)

$(BINDIR)/$(88D2AMPEXE): $(88D2AOBJS) $(LIBDIR)/$(LIBARPS).a            \
                $(LIBDIR)/$(LIBADAS).a $(LIBA2IO) $(LIBSDIO)
	$(ARPS_LD) $(LDFLAGS) -o $@ $(88D2AOBJS) $(LIBDIR)/$(LIBARPS).a \
                  $(LIBDIR)/$(LIBADAS).a $(LIBDIR)/$(LIBA2IO).a  \
                  $(LIBDIR)/$(LIBSDIO).a $(LIBS)

$(BINDIR)/$(88D2AEXE_FAKE): $(88D2AOBJS) $(88D2A_FKOBJ)                 \
                  $(LIBDIR)/$(LIBARPS).a $(LIBDIR)/$(LIBADAS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(88D2AOBJS) $(88D2A_FKOBJ)         \
                $(LIBDIR)/$(LIBARPS).a $(LIBDIR)/$(LIBADAS).a           \
                $(LIBS)
$(BINDIR)/$(NIDS2AEXE): $(NIDS2AOBJS) $(LIBDIR)/$(LIBARPS).a \
                            $(LIBDIR)/$(LIBADAS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(NIDS2AOBJS) \
                            $(LIBDIR)/$(LIBARPS).a \
                            $(LIBDIR)/$(LIBADAS).a $(LIBS)

$(BINDIR)/$(NIDS2AMPEXE): $(NIDS2AOBJS) $(LIBDIR)/$(LIBARPS).a \
                            $(LIBDIR)/$(LIBADAS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(NIDS2AOBJS) \
                            $(LIBDIR)/$(LIBARPS).a \
                            $(LIBDIR)/$(LIBADAS).a $(LIBS)

$(BINDIR)/$(CASA2AEXE): $(CASA2AOBJS) $(LIBDIR)/$(LIBARPS).a \
                            $(LIBDIR)/$(LIBADAS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(CASA2AOBJS) \
                            $(LIBDIR)/$(LIBARPS).a \
                            $(LIBDIR)/$(LIBADAS).a $(LIBS)

$(BINDIR)/$(NCRAD2AEXE): $(NCRAD2AOBJS) $(LIBDIR)/$(LIBARPS).a \
                            $(LIBDIR)/$(LIBADAS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(NCRAD2AOBJS) \
                            $(LIBDIR)/$(LIBARPS).a \
                            $(LIBDIR)/$(LIBADAS).a $(LIBS)
$(BINDIR)/$(NCRAD2AMPEXE): $(NCRAD2AOBJS) $(LIBDIR)/$(LIBARPS).a \
                            $(LIBDIR)/$(LIBADAS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(NCRAD2AOBJS) \
                            $(LIBDIR)/$(LIBARPS).a \
                            $(LIBDIR)/$(LIBADAS).a $(LIBS)


$(BINDIR)/$(ARPS2RADEXE): $(ARPS2RADOBJS) $(LIBDIR)/$(LIBARPS).a $(LIBDIR)/$(LIBADAS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(ARPS2RADOBJS)                     \
                   $(LIBDIR)/$(LIBARPS).a $(LIBDIR)/$(LIBADAS).a        \
                   $(LIBS)

$(BINDIR)/$(RADEMULEXE): $(RADEMULOBJS) $(LIBDIR)/$(LIBARPS).a $(LIBDIR)/$(LIBADAS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(RADEMULOBJS) \
                   $(LIBDIR)/$(LIBARPS).a $(LIBDIR)/$(LIBADAS).a \
                   $(LIBS)

$(BINDIR)/$(RADB2CDFEXE): $(RADB2CDFOBJS) $(LIBDIR)/$(LIBARPS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(RADB2CDFOBJS) \
                   $(LIBDIR)/$(LIBARPS).a \
                   $(LIBS)

$(BINDIR)/$(RADSECTEXE): $(RADSECTOBJS) $(LIBDIR)/$(LIBARPS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(RADSECTOBJS) \
                   $(LIBDIR)/$(LIBARPS).a \
                   $(LIBS)

$(BINDIR)/$(ATTENEXE): $(ATTENOBJS) $(LIBDIR)/$(LIBARPS).a $(LIBDIR)/$(LIBADAS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(ATTENOBJS) \
                   $(LIBDIR)/$(LIBARPS).a $(LIBDIR)/$(LIBADAS).a \
                   $(LIBS)

$(BINDIR)/$(PLTRADCOLEXE): $(PLTRADCOLOBJS) $(LIBDIR)/$(LIBARPS).a      \
                           $(ZXPLOTOBJ)
	$(ARPS_LD) $(LDFLAGS) -o $@ $(PLTRADCOLOBJS) $(ZXPLOTOBJ)       \
                                    $(LIBDIR)/$(LIBARPS).a $(LIBS)

$(BINDIR)/$(PLTPPIEXE): $(PLTPPIOBJS) $(LIBDIR)/$(LIBARPS).a $(ZXPLOTOBJ)
	$(ARPS_LD) $(LDFLAGS) -o $@ $(PLTPPIOBJS) $(ZXPLOTOBJ)       \
                                    $(LIBDIR)/$(LIBARPS).a $(LIBS)

$(BINDIR)/$(RADARPLTNCAREXE): $(PLTRADARSCANOBJS)                     \
                                $(LIBDIR)/$(LIBZXNCAR).a                \
                                $(LIBDIR)/$(LIBARPS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(PLTRADARSCANOBJS)                 \
                                    $(LIBDIR)/$(LIBZXNCAR).a            \
                                    $(LIBDIR)/$(LIBARPS).a $(LIBS)

$(BINDIR)/$(RADARPLTPOSTEXE): $(PLTRADARSCANOBJS)                     \
                                $(LIBDIR)/$(LIBZXPOST).a                \
                                $(LIBDIR)/$(LIBARPS).a
	$(ARPS_LD) $(LDFLAGS) -o $@ $(PLTRADARSCANOBJS) $(ZXPLOTOBJ)    \
                                    $(LIBDIR)/$(LIBZXPOST).a            \
                                    $(LIBDIR)/$(LIBARPS).a $(LIBS)

#----------------------------------------------------------------------
#
# Libaray A2IO
#
#----------------------------------------------------------------------

$(LIBA2IO):
	-@$(RM) -f $(LIBDIR)/$@.a
	cd $(A2IODIR); make $(MAKEOPT)                     \
                            'TOPDIR=$(TOPDIR)'             \
                            'LIBDIR=$(LIBDIR)'             \
                            'CFLAGS=$(CFLAGS)'             \
                            $(LIBA2IO)
$(LIBSRIO):
	-@$(RM) -f $(LIBDIR)/$@.a
	cd $(SOIODIR); make $(MAKEOPT)                     \
                            'TOPDIR=$(TOPDIR)'             \
                            'LIBDIR=$(LIBDIR)'             \
                            'CFLAGS=$(CFLAGS)'             \
                            $(LIBSRIO)
$(LIBSDIO):
	-@$(RM) -f $(LIBDIR)/$@.a
	cd $(SOIODIR); make $(MAKEOPT)                     \
                            'TOPDIR=$(TOPDIR)'             \
                            'LIBDIR=$(LIBDIR)'             \
                            'CFLAGS=$(CFLAGS)'             \
                            $(LIBSDIO)

#-----------------------------------------------------------------------
#
# Remove the object code for individual programs
#
#-----------------------------------------------------------------------
clean: clean.ncrad2arps clean.casa2arps                 \
       clean.arps2rad clean.radaremul clean.radbin2cdf  \
       clean.radsector clean.atten

clean.88d2arps: clean.liba2io clean.libsoio clean.radaremul
	-$(RM) -f $(BINDIR)/$(88D2AEXE)      $(BINDIR)/$(88D2AMPEXE) \
                  $(BINDIR)/$(88D2AEXE_FAKE) $(BINDIR)/$(88D2ASEXE)  \
                  $(BINDIR)/$(PLTRADCOLEXE)  $(BINDIR)/$(PLTPPIEXE)  \
                  $(BINDIR)/$(NIDS2AEXE)          \
                  $(BINDIR)/$(NIDS2AMPEXE)        \
                  $(BINDIR)/$(RADARPLTNCAREXE)    \
                  $(BINDIR)/$(RADARPLTPOSTEXE)    \
                  $(88D2AOBJS)  $(88D2A_FKOBJ)    \
                  $(NIDS2AOBJS) $(PLTRADCOLOBJS) $(PLTPPIOBJS) \
                  $(PLTRADARSCANOBJS)            \
                  *.mod *.d work.pc work.pcl

clean.ncrad2arps:
	-$(RM) -f $(BINDIR)/$(NCRAD2AEXE) $(NCRAD2AOBJS)  \
                  $(BINDIR)/$(NCRAD2AMPEXE)

clean.casa2arps:
	-$(RM) -f $(BINDIR)/$(CASA2AEXE) $(CASA2AOBJS)

clean.liba2io:
	cd $(A2IODIR); make $(MAKEOPT)                     \
                            'TOPDIR=$(TOPDIR)'             \
                            'LIBDIR=$(LIBDIR)'             \
                            clean
clean.libsoio:
	cd $(SOIODIR); make $(MAKEOPT)                     \
                            'TOPDIR=$(TOPDIR)'             \
                            'LIBDIR=$(LIBDIR)'             \
                            clean
clean.arps2rad:
	-$(RM) -f $(BINDIR)/$(ARPS2RADEXE)   \
                  $(ARPS2RADOBJS) \
                  *.mod *.d work.pc work.pcl

clean.radaremul:
	-$(RM) -f $(BINDIR)/$(RADEMULEXE)   \
                  $(RADEMULOBJS) \
                  dummycdf.o wtiltcdf.o

clean.radbin2cdf:
	-$(RM) -f $(BINDIR)/$(RADB2CDFEXE)   \
                  $(RADB2CDFOBJS) \
                  wtiltcdf.o
clean.radsector:
	-$(RM) -f $(BINDIR)/$(RADSECTEXE)   \
                  $(RADSECTOBJS) \
                  wtiltcdf.o
clean.atten:
	-$(RM) -f $(BINDIR)/$(ATTENEXE)   \
                  $(ATTENOBJS)

#-----------------------------------------------------------------------
#
# Object code dependency list:
#
#-----------------------------------------------------------------------

88d2arps.o  : 88d2arps.c
	$(CCMP)  $(CFLAGS) -c $<
fakeio.o    : fakeio.c

nids2arps.o : nids2arps.f90 \
                               $(INCLDIR)/globcst.inc \
                               $(INCLDIR)/grid.inc
f88d2arps.o : f88d2arps.f90 \
                               $(INCLDIR)/globcst.inc \
                               $(INCLDIR)/remapcst.inc \
                               $(INCLDIR)/grid.inc
ncrad2arps.o : ncrad2arps.f90 \
                               $(INCLDIR)/globcst.inc \
                               $(INCLDIR)/grid.inc
rdtiltcdf.o : rdtiltcdf.f90
rdtilt88d.o : rdtilt88d.f90

pltmap.o    : pltmap.f90
pltradcol.o : pltradcol.f90    $(INCLDIR)/globcst.inc \
                               $(INCLDIR)/grid.inc
radarinfo.o : radarinfo.c
remaplib.o : remaplib.f90      $(INCLDIR)/remap.inc    \
                               $(INCLDIR)/remaptab.inc \
                               $(INCLDIR)/globcst.inc  \
                               $(INCLDIR)/grid.inc  \
                               $(INCLDIR)/remaptab.inc

remaptilt.o : remaptilt.f90    $(INCLDIR)/globcst.inc  \
                               $(INCLDIR)/grid.inc  \
                               $(INCLDIR)/remap.inc    \
                               $(INCLDIR)/remaptab.inc \
                               $(INCLDIR)/remapsum.inc
$(INCLDIR)/alarm.h: $(INCLDIR)/udposix.h

arps2rad.o : arps2rad.f90      $(INCLDIR)/globcst.inc \
                               $(INCLDIR)/grid.inc  \
                               $(INCLDIR)/indtflg.inc \
                               $(INCLDIR)/remap.inc

radaremul.o : radaremul.f90 dualpara.o dualtmat.o duallib.o \
                               $(INCLDIR)/globcst.inc \
                               $(INCLDIR)/grid.inc  \
                               $(INCLDIR)/phycst.inc
dualpara.o  : dualpara.f90
dualtmat.o  : dualtmat.f90

radbin2cdf.o : radbin2cdf.f90  $(INCLDIR)/globcst.inc
radsector.o : radsector.f90    $(INCLDIR)/globcst.inc

atten.o : atten.f90    $(INCLDIR)/globcst.inc \
                       $(INCLDIR)/grid.inc

radmosaic.o : radmosaic.f90

dummycdf.o  : dummycdf.f90
rdtiltcdf.o : rdtiltcdf.f90
wttiltcdf.o : wttiltcdf.f90

unfold.o    : unfold.f90
unfldlib.o  : unfldlib.f90
apdetect.o  : apdetect.f90

nidsdecoders.o : nidsdecoders.f90
adjustreflib.o : adjustreflib.f90
rasterlib.o : rasterlib.f90
arps2rad.o  : arps2rad.f90     $(INCLDIR)/grid.inc \
                               $(INCLDIR)/mp.inc

wrttilts.o  : wrttilts.f90

#wdt-caps sra
adjustreflib.o: adjustreflib.f90

pltradarscan.o : pltradarscan.f90

